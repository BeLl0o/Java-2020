static 关键字
“static方法就是没有this的方法。在static方法内部不能调用非静态方法，反过来是可以的。而且可以在没有创建任何对象的前提下，仅仅通过类本身来调用static方法。这实际上正是static方法的主要用途”
【static--方便在没有创建对象的情况下来进行调用方法或变量】
~~~~~被static关键字修饰的方法或变量不需要依赖于对象来进行访问，只要类被加载了，就可以通过类名访问。
1)static方法

static方法称作静态方法（静态方法：不依赖于任何对象就可以进行访问，因此对静态方法来说，"没有this"。在静态方法中不能访问类的非静态变量、非静态成员方法，因为非静态成员方法、变量都必须依赖具体的对象才能被调用；然而，在非静态成员方法中可以访问静态成员方法、变量）
//以StaticTestMyObject.java为例
~~~~~禁止在静态成员方法中访问非静态成员方法
e.g.1    print2()方法是静态方法，不依赖于对象来访问，可以直接通过在main函数中“MyObject.print2()”来调用。然而由于没有对象，str2根本不存在，这条语句是错误的。
·非静态成员方法访问静态成员方法或变量无限制。
e.g.2    main函数是最常见的static方法，因为程序在执行main方法的时候可能没有创建任何对象，因此只能通过类名访问。

2)static变量

static变量被称作静态变量。
·静态变量和非静态变量的区别：
静态变量被所有的成员共享，在内存中只有一个副本，他当且仅当在类初次加载的时候被初始化。static成员变量的初始化顺序按照定义的顺序进行初始化。
非静态变量是对象拥有的，在创建对象的时候被初始化，存在多个副本，各个对象拥有的副本互不影响。

3)static代码块

static可用来形成静态代码块以优化程序性能。
【优化程序性能】只会在类加载的时候执行一次
·常用来将一些只需要执行一次的初始化操作都放在static代码块中。

static代码块可以置于类中的任何位置，一个类中可以有多个static代码块。在类初次被加载的时候，会按照static块的顺序来执行static块，并且只会执行一次。

//以StaticCodeBlock_Test_Person.java为例
isBoomer在每次调用时都会生成startDate,birthDate两个对象，造成了空间浪费。





